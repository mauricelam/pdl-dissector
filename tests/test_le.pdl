little_endian_packets

enum PacketType: 8 {
  Simple = 0,
  Enum = 1,
  Group = 2,
  Unaligned = 3,
  Checksum = 4,
}

// A top level packet
packet TopLevel {
  type: PacketType,
  _body_
}

// Example 1: Packet
packet SimplePacket: TopLevel(type = Simple) {
  scalar_value: 64,
}

// Example 2: Enum
enum CoffeeAddition: 8 {
  Empty = 0,

  NonAlcoholic = 1..9 {
    Cream = 1,
    Vanilla = 2,
    Chocolate = 3,
  },

  Alcoholic = 10..19 {
    Whisky = 10,
    Rum = 11,
    Kahlua = 12,
    Aquavit = 13,
  },

  Custom = 20..29,

  Other = ..
}

packet EnumPacket: TopLevel(type = Enum) {
  addition: CoffeeAddition,
}

// Example 3: Group

group Paged {
  offset: 8,
  limit: 8
}

packet AskBrewHistory: TopLevel(type = Group) {
  pot: 8, // Coffee Pot
  Paged
}

// Example 4 Unaligned packet
packet UnalignedPacket: TopLevel(type = Unaligned) {
  a: 3,
  b: 8,
  c: 3,
  d: 3,
  e: 3,
}

checksum CRC16: 16 "crc16"

packet Packet_Checksum_Field_FromStart: TopLevel(type = Checksum) {
    _checksum_start_(crc),
    a: 16,
    b: 16,
    crc: CRC16,
}
